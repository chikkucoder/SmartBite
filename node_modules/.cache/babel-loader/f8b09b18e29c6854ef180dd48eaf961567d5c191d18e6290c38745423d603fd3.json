{"ast":null,"code":"var _jsxFileName = \"F:\\\\2024 COURSE\\\\PROJECT++\\\\mernapp\\\\src\\\\components\\\\Checkout.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = ({\n  totalAmount\n}) => {\n  const handlePayment = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/payment/create-order\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          amount: totalAmount,\n          currency: \"INR\"\n        })\n      });\n      const order = await response.json();\n      console.log(\"Order Created:\", order);\n      if (!window.Razorpay) {\n        alert(\"Razorpay SDK failed to load. Are you online?\");\n        return;\n      }\n      const options = {\n        key: \"rzp_test_89g1mV1jcYw8DI\",\n        // Use your actual Razorpay Key ID\n        amount: order.amount,\n        currency: order.currency,\n        name: \"SmartBite\",\n        description: \"Food Order Payment\",\n        order_id: order.id,\n        handler: async response => {\n          console.log(\"Payment Response:\", response);\n          const verifyResponse = await fetch(\"http://localhost:5000/api/payment/verify-payment\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(response)\n          });\n          const verifyData = await verifyResponse.json();\n          if (verifyData.success) {\n            alert(\"✅ Payment successful!\");\n          } else {\n            alert(\"❌ Payment failed!\");\n          }\n        },\n        prefill: {\n          name: \"Customer Name\",\n          email: \"customer@example.com\",\n          contact: \"9999999999\"\n        },\n        theme: {\n          color: \"#3399cc\"\n        }\n      };\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (error) {\n      console.error(\"Payment Error:\", error);\n      alert(\"Error in initiating payment.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      style: styles.payButton,\n      children: [\"Pay \\u20B9\", totalAmount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c = Checkout;\nconst styles = {\n  payButton: {\n    backgroundColor: \"#28a745\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    fontSize: \"16px\",\n    border: \"none\",\n    cursor: \"pointer\",\n    marginTop: \"10px\"\n  }\n};\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Checkout","totalAmount","handlePayment","response","fetch","method","headers","body","JSON","stringify","amount","currency","order","json","console","log","window","Razorpay","alert","options","key","name","description","order_id","id","handler","verifyResponse","verifyData","success","prefill","email","contact","theme","color","rzp","open","error","children","onClick","style","styles","payButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","backgroundColor","padding","fontSize","border","cursor","marginTop","$RefreshReg$"],"sources":["F:/2024 COURSE/PROJECT++/mernapp/src/components/Checkout.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Checkout = ({ totalAmount }) => {\r\n  const handlePayment = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/payment/create-order\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ amount: totalAmount, currency: \"INR\" }),\r\n      });\r\n\r\n      const order = await response.json();\r\n      console.log(\"Order Created:\", order);\r\n\r\n      if (!window.Razorpay) {\r\n        alert(\"Razorpay SDK failed to load. Are you online?\");\r\n        return;\r\n      }\r\n\r\n      const options = {\r\n        key: \"rzp_test_89g1mV1jcYw8DI\", // Use your actual Razorpay Key ID\r\n        amount: order.amount,\r\n        currency: order.currency,\r\n        name: \"SmartBite\",\r\n        description: \"Food Order Payment\",\r\n        order_id: order.id,\r\n        handler: async (response) => {\r\n          console.log(\"Payment Response:\", response);\r\n\r\n          const verifyResponse = await fetch(\"http://localhost:5000/api/payment/verify-payment\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(response),\r\n          });\r\n\r\n          const verifyData = await verifyResponse.json();\r\n          if (verifyData.success) {\r\n            alert(\"✅ Payment successful!\");\r\n          } else {\r\n            alert(\"❌ Payment failed!\");\r\n          }\r\n        },\r\n        prefill: {\r\n          name: \"Customer Name\",\r\n          email: \"customer@example.com\",\r\n          contact: \"9999999999\",\r\n        },\r\n        theme: { color: \"#3399cc\" },\r\n      };\r\n\r\n      const rzp = new window.Razorpay(options);\r\n      rzp.open();\r\n    } catch (error) {\r\n      console.error(\"Payment Error:\", error);\r\n      alert(\"Error in initiating payment.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handlePayment} style={styles.payButton}>\r\n        Pay ₹{totalAmount}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  payButton: {\r\n    backgroundColor: \"#28a745\",\r\n    color: \"white\",\r\n    padding: \"10px 20px\",\r\n    fontSize: \"16px\",\r\n    border: \"none\",\r\n    cursor: \"pointer\",\r\n    marginTop: \"10px\",\r\n  },\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}