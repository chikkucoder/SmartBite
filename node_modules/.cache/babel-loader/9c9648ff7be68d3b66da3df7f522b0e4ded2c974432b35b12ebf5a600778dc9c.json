{"ast":null,"code":"var _jsxFileName = \"F:\\\\2024 COURSE\\\\PROJECT++\\\\mernapp\\\\src\\\\screens\\\\MyOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MyOrder() {\n  _s();\n  const [orderData, setOrderData] = useState([]); // Ensure it's an array\n\n  const fetchMyOrder = async () => {\n    try {\n      const email = localStorage.getItem('userEmail');\n      console.log(\"Fetching orders for:\", email);\n      const response = await fetch(\"http://localhost:5000/api/myOrderData\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch orders');\n      }\n      const data = await response.json();\n      console.log(\"ðŸ”¹ Full API Response:\", data);\n      console.log(\"ðŸ”¹ Order Data Extracted:\", data.orderData);\n\n      // Flatten order data and remove the first object in each sub-array\n      const cleanedOrders = data.orderData.map(order => order.slice(1)).flat();\n      console.log(\"âœ… Cleaned Orders for display:\", cleanedOrders); // âœ… Debugging\n\n      setOrderData(cleanedOrders); // Set cleaned order data\n    } catch (error) {\n      console.error(\"Error fetching orders:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchMyOrder();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4 text-black\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), orderData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No orders found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: orderData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mt-3\",\n            style: {\n              width: \"18rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.img,\n              className: \"card-img-top\",\n              alt: item.name,\n              style: {\n                height: \"120px\",\n                objectFit: \"cover\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Quantity: \", item.qty]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Size: \", item.size]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Price: \\u20B9\", item.price, \"/-\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MyOrder, \"omML5zCzVwkSAU9aQWI9BtEDc7s=\");\n_c = MyOrder;\nvar _c;\n$RefreshReg$(_c, \"MyOrder\");","map":{"version":3,"names":["React","useEffect","useState","Footer","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","MyOrder","_s","orderData","setOrderData","fetchMyOrder","email","localStorage","getItem","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","cleanedOrders","map","order","slice","flat","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","item","index","style","width","src","img","alt","name","height","objectFit","qty","size","price","_c","$RefreshReg$"],"sources":["F:/2024 COURSE/PROJECT++/mernapp/src/screens/MyOrder.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Footer from '../components/Footer';\r\nimport Navbar from '../components/Navbar';\r\n\r\nexport default function MyOrder() {\r\n    const [orderData, setOrderData] = useState([]); // Ensure it's an array\r\n\r\n    const fetchMyOrder = async () => {\r\n        try {\r\n            const email = localStorage.getItem('userEmail');\r\n            console.log(\"Fetching orders for:\", email);\r\n    \r\n            const response = await fetch(\"http://localhost:5000/api/myOrderData\", {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email })\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch orders');\r\n            }\r\n    \r\n            const data = await response.json();\r\n            console.log(\"ðŸ”¹ Full API Response:\", data);\r\n            console.log(\"ðŸ”¹ Order Data Extracted:\", data.orderData);\r\n    \r\n            // Flatten order data and remove the first object in each sub-array\r\n            const cleanedOrders = data.orderData.map(order => order.slice(1)).flat();\r\n    \r\n            console.log(\"âœ… Cleaned Orders for display:\", cleanedOrders); // âœ… Debugging\r\n    \r\n            setOrderData(cleanedOrders); // Set cleaned order data\r\n        } catch (error) {\r\n            console.error(\"Error fetching orders:\", error);\r\n        }\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n        fetchMyOrder();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"container mt-4 text-black\">\r\n                <h2>My Orders</h2>\r\n    \r\n                {/* âœ… Show message if no orders exist */}\r\n                {orderData.length === 0 ? (\r\n                    <p>No orders found.</p>\r\n                ) : (\r\n                    <div className=\"row\">\r\n                        {orderData.map((item, index) => (\r\n                            <div key={index} className=\"col-md-4\">\r\n                                <div className=\"card mt-3\" style={{ width: \"18rem\" }}>\r\n                                    <img src={item.img} className=\"card-img-top\" alt={item.name} style={{ height: \"120px\", objectFit: \"cover\" }} />\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{item.name}</h5>\r\n                                        <p>Quantity: {item.qty}</p>\r\n                                        <p>Size: {item.size}</p>\r\n                                        <p>Price: â‚¹{item.price}/-</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n    \r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEhD,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/CC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,KAAK,CAAC;MAE1C,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX;QAAM,CAAC;MAClC,CAAC,CAAC;MAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC7C;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCZ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEU,IAAI,CAAC;MAC1CX,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEU,IAAI,CAACjB,SAAS,CAAC;;MAEvD;MACA,MAAMmB,aAAa,GAAGF,IAAI,CAACjB,SAAS,CAACoB,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAExEjB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEY,aAAa,CAAC,CAAC,CAAC;;MAE7DlB,YAAY,CAACkB,aAAa,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZlB,OAAO,CAACkB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAGDlC,SAAS,CAAC,MAAM;IACZY,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA,CAAAE,SAAA;IAAA4B,QAAA,gBACI9B,OAAA,CAACF,MAAM;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVlC,OAAA;MAAKmC,SAAS,EAAC,2BAA2B;MAAAL,QAAA,gBACtC9B,OAAA;QAAA8B,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAGjB7B,SAAS,CAAC+B,MAAM,KAAK,CAAC,gBACnBpC,OAAA;QAAA8B,QAAA,EAAG;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEvBlC,OAAA;QAAKmC,SAAS,EAAC,KAAK;QAAAL,QAAA,EACfzB,SAAS,CAACoB,GAAG,CAAC,CAACY,IAAI,EAAEC,KAAK,kBACvBtC,OAAA;UAAiBmC,SAAS,EAAC,UAAU;UAAAL,QAAA,eACjC9B,OAAA;YAAKmC,SAAS,EAAC,WAAW;YAACI,KAAK,EAAE;cAAEC,KAAK,EAAE;YAAQ,CAAE;YAAAV,QAAA,gBACjD9B,OAAA;cAAKyC,GAAG,EAAEJ,IAAI,CAACK,GAAI;cAACP,SAAS,EAAC,cAAc;cAACQ,GAAG,EAAEN,IAAI,CAACO,IAAK;cAACL,KAAK,EAAE;gBAAEM,MAAM,EAAE,OAAO;gBAAEC,SAAS,EAAE;cAAQ;YAAE;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC/GlC,OAAA;cAAKmC,SAAS,EAAC,WAAW;cAAAL,QAAA,gBACtB9B,OAAA;gBAAImC,SAAS,EAAC,YAAY;gBAAAL,QAAA,EAAEO,IAAI,CAACO;cAAI;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3ClC,OAAA;gBAAA8B,QAAA,GAAG,YAAU,EAACO,IAAI,CAACU,GAAG;cAAA;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC3BlC,OAAA;gBAAA8B,QAAA,GAAG,QAAM,EAACO,IAAI,CAACW,IAAI;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxBlC,OAAA;gBAAA8B,QAAA,GAAG,eAAQ,EAACO,IAAI,CAACY,KAAK,EAAC,IAAE;cAAA;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC,GATAI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUV,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACNlC,OAAA,CAACH,MAAM;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACZ,CAAC;AAGX;AAAC9B,EAAA,CArEuBD,OAAO;AAAA+C,EAAA,GAAP/C,OAAO;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}