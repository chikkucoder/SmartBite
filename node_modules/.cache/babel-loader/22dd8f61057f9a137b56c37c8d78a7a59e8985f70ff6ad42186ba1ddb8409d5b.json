{"ast":null,"code":"var _jsxFileName = \"F:\\\\2024 COURSE\\\\PROJECT++\\\\mernapp\\\\src\\\\screens\\\\MyOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MyOrder() {\n  _s();\n  const [orderData, setOrderData] = useState([]); // Ensure it's an array\n\n  const fetchMyOrder = async () => {\n    try {\n      const email = localStorage.getItem('userEmail');\n      console.log(\"Fetching orders for:\", email);\n      const response = await fetch(\"http://localhost:5000/api/myOrderData\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch orders');\n      }\n      const data = await response.json();\n      console.log(\"ðŸ”¹ Full API Response:\", data);\n\n      // âœ… Extract Order Date and Items\n      const formattedOrders = data.orderData.map(order => {\n        if (!order.length) return null; // Skip empty orders\n\n        const firstItem = order[0]; // First object should contain Order_date\n        const orderDate = firstItem.Order_date ? new Date(firstItem.Order_date).toLocaleDateString() : \"Unknown Date\";\n        const items = order.slice(1); // Remove the first object (date) from items\n        return {\n          orderDate,\n          items\n        };\n      }).filter(order => order !== null); // Remove any invalid entries\n\n      console.log(\"âœ… Orders with Date:\", formattedOrders);\n      setOrderData(formattedOrders);\n    } catch (error) {\n      console.error(\"Error fetching orders:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchMyOrder();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), orderData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No orders found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: orderData.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-primary\",\n            children: [\"Order Date: \", order.orderDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: order.items.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card mt-3\",\n                style: {\n                  width: \"18rem\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Quantity: \", item.qty]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Size: \", item.size]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Price: \\u20B9\", item.price, \"/-\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 45\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MyOrder, \"omML5zCzVwkSAU9aQWI9BtEDc7s=\");\n_c = MyOrder;\nvar _c;\n$RefreshReg$(_c, \"MyOrder\");","map":{"version":3,"names":["React","useEffect","useState","Footer","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","MyOrder","_s","orderData","setOrderData","fetchMyOrder","email","localStorage","getItem","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","formattedOrders","map","order","length","firstItem","orderDate","Order_date","Date","toLocaleDateString","items","slice","filter","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","item","i","style","width","name","qty","size","price","_c","$RefreshReg$"],"sources":["F:/2024 COURSE/PROJECT++/mernapp/src/screens/MyOrder.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Footer from '../components/Footer';\r\nimport Navbar from '../components/Navbar';\r\n\r\nexport default function MyOrder() {\r\n    const [orderData, setOrderData] = useState([]); // Ensure it's an array\r\n\r\n    const fetchMyOrder = async () => {\r\n        try {\r\n            const email = localStorage.getItem('userEmail');\r\n            console.log(\"Fetching orders for:\", email);\r\n    \r\n            const response = await fetch(\"http://localhost:5000/api/myOrderData\", {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email })\r\n            });\r\n    \r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch orders');\r\n            }\r\n    \r\n            const data = await response.json();\r\n            console.log(\"ðŸ”¹ Full API Response:\", data);\r\n    \r\n            // âœ… Extract Order Date and Items\r\n            const formattedOrders = data.orderData.map(order => {\r\n                if (!order.length) return null; // Skip empty orders\r\n    \r\n                const firstItem = order[0]; // First object should contain Order_date\r\n                const orderDate = firstItem.Order_date ? new Date(firstItem.Order_date).toLocaleDateString() : \"Unknown Date\";\r\n    \r\n                const items = order.slice(1); // Remove the first object (date) from items\r\n                return { orderDate, items };\r\n            }).filter(order => order !== null); // Remove any invalid entries\r\n    \r\n            console.log(\"âœ… Orders with Date:\", formattedOrders);\r\n            setOrderData(formattedOrders);\r\n        } catch (error) {\r\n            console.error(\"Error fetching orders:\", error);\r\n        }\r\n    };\r\n    \r\n    \r\n    useEffect(() => {\r\n        fetchMyOrder();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"container mt-4\">\r\n                <h2>My Orders</h2>\r\n    \r\n                {orderData.length === 0 ? (\r\n                    <p>No orders found.</p>\r\n                ) : (\r\n                    <div>\r\n                        {orderData.map((order, index) => (\r\n                            <div key={index} className=\"mb-4\">\r\n                                {/* âœ… Show Order Date */}\r\n                                <h4 className=\"text-primary\">Order Date: {order.orderDate}</h4>\r\n                                <hr />\r\n    \r\n                                <div className=\"row\">\r\n                                    {order.items.map((item, i) => (\r\n                                        <div key={i} className=\"col-md-4\">\r\n                                            <div className=\"card mt-3\" style={{ width: \"18rem\" }}>\r\n                                               \r\n                                                <div className=\"card-body\">\r\n                                                    <h5 className=\"card-title\">{item.name}</h5>\r\n                                                    <p>Quantity: {item.qty}</p>\r\n                                                    <p>Size: {item.size}</p>\r\n                                                    <p>Price: â‚¹{item.price}/-</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n    \r\n    \r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}