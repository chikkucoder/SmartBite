{"ast":null,"code":"var _jsxFileName = \"F:\\\\2024 COURSE\\\\PROJECT++\\\\mernapp\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatbot() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const handleSend = async () => {\n    // If the input is empty, do nothing\n    if (!userInput.trim()) return;\n\n    // Add user message to the chat\n    const userMessage = {\n      sender: 'user',\n      text: userInput\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      // Send user message to the backend\n      const response = await fetch('http://localhost:5000/api/chatbot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userInput\n        })\n      });\n\n      // Wait for the response and handle it\n      const data = await response.json();\n      const botMessage = {\n        sender: 'bot',\n        text: data.reply\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"Error with the chatbot request:\", error);\n      // If an error occurs, send a default error message\n      const errorMessage = {\n        sender: 'bot',\n        text: \"Oops! Something went wrong. Please try again later.\"\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n\n    // Clear the input field after sending the message\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: '20px',\n      right: '20px',\n      width: '300px',\n      zIndex: 9999\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => setIsOpen(!isOpen),\n      children: isOpen ? 'Close Chat' : 'Chat with SmartBite'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-2 mt-2\",\n      style: {\n        width: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxHeight: '300px',\n          overflowY: 'auto',\n          marginBottom: '10px'\n        },\n        children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-${msg.sender === 'bot' ? 'success' : 'primary'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender === 'bot' ? 'Bot' : 'You', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), \" \", msg.text]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        className: \"form-control my-2\",\n        placeholder: \"Ask me anything...\",\n        onKeyDown: e => e.key === 'Enter' && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success w-100\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatbot, \"fq+VhNRB6vBk2vhHCHxICIZbt1k=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","userInput","setUserInput","handleSend","trim","userMessage","sender","text","prev","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","error","console","errorMessage","style","position","bottom","right","width","zIndex","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","maxHeight","overflowY","marginBottom","map","msg","i","type","value","onChange","e","target","placeholder","onKeyDown","key","_c","$RefreshReg$"],"sources":["F:/2024 COURSE/PROJECT++/mernapp/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function Chatbot() {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n    const [userInput, setUserInput] = useState('');\r\n\r\n    const handleSend = async () => {\r\n        // If the input is empty, do nothing\r\n        if (!userInput.trim()) return;\r\n\r\n        // Add user message to the chat\r\n        const userMessage = { sender: 'user', text: userInput };\r\n        setMessages(prev => [...prev, userMessage]);\r\n\r\n        try {\r\n            // Send user message to the backend\r\n            const response = await fetch('http://localhost:5000/api/chatbot', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ message: userInput })\r\n            });\r\n\r\n            // Wait for the response and handle it\r\n            const data = await response.json();\r\n            const botMessage = { sender: 'bot', text: data.reply };\r\n            setMessages(prev => [...prev, botMessage]);\r\n\r\n        } catch (error) {\r\n            console.error(\"Error with the chatbot request:\", error);\r\n            // If an error occurs, send a default error message\r\n            const errorMessage = { sender: 'bot', text: \"Oops! Something went wrong. Please try again later.\" };\r\n            setMessages(prev => [...prev, errorMessage]);\r\n        }\r\n\r\n        // Clear the input field after sending the message\r\n        setUserInput('');\r\n    };\r\n\r\n    return (\r\n        <div style={{ position: 'fixed', bottom: '20px', right: '20px', width: '300px', zIndex: 9999 }}>\r\n            {/* Button to toggle chat window */}\r\n            <button className=\"btn btn-primary\" onClick={() => setIsOpen(!isOpen)}>\r\n                {isOpen ? 'Close Chat' : 'Chat with SmartBite'}\r\n            </button>\r\n\r\n            {/* Chatbox content when open */}\r\n            {isOpen && (\r\n                <div className=\"card p-2 mt-2\" style={{ width: '300px' }}>\r\n                    {/* Message list container */}\r\n                    <div style={{ maxHeight: '300px', overflowY: 'auto', marginBottom: '10px' }}>\r\n                        {messages.map((msg, i) => (\r\n                            <div key={i} className={`text-${msg.sender === 'bot' ? 'success' : 'primary'}`}>\r\n                                <strong>{msg.sender === 'bot' ? 'Bot' : 'You'}:</strong> {msg.text}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {/* Input and send button */}\r\n                    <input\r\n                        type=\"text\"\r\n                        value={userInput}\r\n                        onChange={(e) => setUserInput(e.target.value)}\r\n                        className=\"form-control my-2\"\r\n                        placeholder=\"Ask me anything...\"\r\n                        onKeyDown={(e) => e.key === 'Enter' && handleSend()}\r\n                    />\r\n                    <button className=\"btn btn-success w-100\" onClick={handleSend}>Send</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}