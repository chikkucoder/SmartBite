{"ast":null,"code":"var _jsxFileName = \"F:\\\\2024 COURSE\\\\PROJECT++\\\\mernapp\\\\src\\\\screens\\\\MyOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MyOrder() {\n  _s();\n  const [orderData, setOrderData] = useState([]);\n  const fetchMyOrder = async () => {\n    try {\n      const email = localStorage.getItem('userEmail');\n      console.log(\"Fetching orders for:\", email);\n      const response = await fetch(\"http://localhost:5000/api/myOrderData\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch orders');\n      }\n      const data = await response.json();\n      console.log(\"🔹 Full API Response:\", data);\n\n      // Clean the order data\n      const cleanedOrders = data.orderData.map(orderArray => {\n        var _orderArray$;\n        const rawDate = (_orderArray$ = orderArray[0]) === null || _orderArray$ === void 0 ? void 0 : _orderArray$.Order_date;\n\n        // Convert date\n        const parsedDate = new Date(rawDate);\n        const orderDate = !isNaN(parsedDate.getTime()) ? parsedDate.toLocaleDateString('en-IN', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        }) : \"Invalid Date\";\n        const items = orderArray.slice(1); // Get food items\n\n        return {\n          orderDate,\n          items\n        };\n      });\n      console.log(\"✅ Cleaned Orders:\", cleanedOrders);\n      setOrderData(cleanedOrders);\n    } catch (error) {\n      console.error(\"❌ Error fetching orders:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchMyOrder();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), orderData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No orders found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: orderData.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-primary\",\n            children: [\"Order Date: \", order.orderDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: order.items.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card mt-3\",\n                style: {\n                  width: \"18rem\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Quantity: \", item.qty]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Size: \", item.size]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Price: \\u20B9\", item.price, \"/-\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 45\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MyOrder, \"omML5zCzVwkSAU9aQWI9BtEDc7s=\");\n_c = MyOrder;\nvar _c;\n$RefreshReg$(_c, \"MyOrder\");","map":{"version":3,"names":["React","useEffect","useState","Footer","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","MyOrder","_s","orderData","setOrderData","fetchMyOrder","email","localStorage","getItem","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","cleanedOrders","map","orderArray","_orderArray$","rawDate","Order_date","parsedDate","Date","orderDate","isNaN","getTime","toLocaleDateString","year","month","day","items","slice","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","order","index","item","i","style","width","name","qty","size","price","_c","$RefreshReg$"],"sources":["F:/2024 COURSE/PROJECT++/mernapp/src/screens/MyOrder.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Footer from '../components/Footer';\r\nimport Navbar from '../components/Navbar';\r\n\r\nexport default function MyOrder() {\r\n    const [orderData, setOrderData] = useState([]);\r\n\r\n    const fetchMyOrder = async () => {\r\n        try {\r\n            const email = localStorage.getItem('userEmail');\r\n            console.log(\"Fetching orders for:\", email);\r\n\r\n            const response = await fetch(\"http://localhost:5000/api/myOrderData\", {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch orders');\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(\"🔹 Full API Response:\", data);\r\n\r\n            // Clean the order data\r\n            const cleanedOrders = data.orderData.map(orderArray => {\r\n                const rawDate = orderArray[0]?.Order_date;\r\n\r\n                // Convert date\r\n                const parsedDate = new Date(rawDate);\r\n                const orderDate = !isNaN(parsedDate.getTime())\r\n                    ? parsedDate.toLocaleDateString('en-IN', {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric'\r\n                    })\r\n                    : \"Invalid Date\";\r\n\r\n                const items = orderArray.slice(1); // Get food items\r\n\r\n                return { orderDate, items };\r\n            });\r\n\r\n            console.log(\"✅ Cleaned Orders:\", cleanedOrders);\r\n            setOrderData(cleanedOrders);\r\n        } catch (error) {\r\n            console.error(\"❌ Error fetching orders:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMyOrder();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"container mt-4\">\r\n                <h2>My Orders</h2>\r\n\r\n                {orderData.length === 0 ? (\r\n                    <p>No orders found.</p>\r\n                ) : (\r\n                    <div>\r\n                        {orderData.map((order, index) => (\r\n                            <div key={index} className=\"mb-4\">\r\n                                <h5 className=\"text-primary\">Order Date: {order.orderDate}</h5>\r\n                                <hr />\r\n                                <div className=\"row\">\r\n                                    {order.items.map((item, i) => (\r\n                                        <div key={i} className=\"col-md-4\">\r\n                                            <div className=\"card mt-3\" style={{ width: \"18rem\" }}>\r\n                                                <div className=\"card-body\">\r\n                                                    <h5 className=\"card-title\">{item.name}</h5>\r\n                                                    <p>Quantity: {item.qty}</p>\r\n                                                    <p>Size: {item.size}</p>\r\n                                                    <p>Price: ₹{item.price}/-</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}