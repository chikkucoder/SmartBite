{"ast":null,"code":"var _jsxFileName = \"F:\\\\2024 COURSE\\\\PROJECT++\\\\mernapp\\\\src\\\\screens\\\\MyOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MyOrder() {\n  _s();\n  const [orderData, setOrderData] = useState([]);\n  const fetchMyOrder = async () => {\n    try {\n      const email = localStorage.getItem('userEmail');\n      console.log(\"Fetching orders for:\", email);\n      const response = await fetch(\"http://localhost:5000/api/myOrderData\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch orders');\n      }\n      const data = await response.json();\n      console.log(\"🔹 Full API Response:\", data);\n      const cleanedOrders = data.orderData.map(order => {\n        const rawDate = order[0].Order_data;\n\n        // Check for MongoDB ISO date format or plain string\n        const orderDate = (rawDate === null || rawDate === void 0 ? void 0 : rawDate.$date) || rawDate || \"\";\n        const items = order.slice(1);\n        return {\n          orderDate,\n          items\n        };\n      });\n      console.log(\"✅ Orders with Date:\", cleanedOrders);\n      setOrderData(cleanedOrders);\n    } catch (error) {\n      console.error(\"Error fetching orders:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchMyOrder();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), orderData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No orders found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: orderData.map((order, index) => {\n          let formattedDate = \"Invalid Date\";\n          try {\n            const dateObj = new Date(order.orderDate);\n            if (!isNaN(dateObj)) {\n              formattedDate = dateObj.toLocaleDateString('en-IN', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric'\n              });\n            }\n          } catch (err) {\n            console.warn(\"⚠️ Date parsing failed for:\", order.orderDate);\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-primary\",\n              children: [\"Order Date: \", formattedDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: order.items.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card mt-3\",\n                  style: {\n                    width: \"18rem\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-body\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"card-title\",\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Quantity: \", item.qty]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Size: \", item.size]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Price: \\u20B9\", item.price, \"/-\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 49\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MyOrder, \"omML5zCzVwkSAU9aQWI9BtEDc7s=\");\n_c = MyOrder;\nvar _c;\n$RefreshReg$(_c, \"MyOrder\");","map":{"version":3,"names":["React","useEffect","useState","Footer","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","MyOrder","_s","orderData","setOrderData","fetchMyOrder","email","localStorage","getItem","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","cleanedOrders","map","order","rawDate","Order_data","orderDate","$date","items","slice","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","index","formattedDate","dateObj","Date","isNaN","toLocaleDateString","year","month","day","err","warn","item","i","style","width","name","qty","size","price","_c","$RefreshReg$"],"sources":["F:/2024 COURSE/PROJECT++/mernapp/src/screens/MyOrder.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Footer from '../components/Footer';\r\nimport Navbar from '../components/Navbar';\r\n\r\nexport default function MyOrder() {\r\n    const [orderData, setOrderData] = useState([]);\r\n\r\n    const fetchMyOrder = async () => {\r\n        try {\r\n            const email = localStorage.getItem('userEmail');\r\n            console.log(\"Fetching orders for:\", email);\r\n\r\n            const response = await fetch(\"http://localhost:5000/api/myOrderData\", {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ email })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch orders');\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(\"🔹 Full API Response:\", data);\r\n\r\n            const cleanedOrders = data.orderData.map(order => {\r\n                const rawDate = order[0].Order_data;\r\n\r\n                // Check for MongoDB ISO date format or plain string\r\n                const orderDate = rawDate?.$date || rawDate || \"\";\r\n\r\n                const items = order.slice(1);\r\n                return { orderDate, items };\r\n            });\r\n\r\n            console.log(\"✅ Orders with Date:\", cleanedOrders);\r\n            setOrderData(cleanedOrders);\r\n        } catch (error) {\r\n            console.error(\"Error fetching orders:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMyOrder();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"container mt-4\">\r\n                <h2>My Orders</h2>\r\n\r\n                {orderData.length === 0 ? (\r\n                    <p>No orders found.</p>\r\n                ) : (\r\n                    <div>\r\n                        {orderData.map((order, index) => {\r\n                            let formattedDate = \"Invalid Date\";\r\n\r\n                            try {\r\n                                const dateObj = new Date(order.orderDate);\r\n                                if (!isNaN(dateObj)) {\r\n                                    formattedDate = dateObj.toLocaleDateString('en-IN', {\r\n                                        year: 'numeric',\r\n                                        month: 'long',\r\n                                        day: 'numeric'\r\n                                    });\r\n                                }\r\n                            } catch (err) {\r\n                                console.warn(\"⚠️ Date parsing failed for:\", order.orderDate);\r\n                            }\r\n\r\n                            return (\r\n                                <div key={index} className=\"mb-4\">\r\n                                    <h5 className=\"text-primary\">Order Date: {formattedDate}</h5>\r\n                                    <hr />\r\n                                    <div className=\"row\">\r\n                                        {order.items.map((item, i) => (\r\n                                            <div key={i} className=\"col-md-4\">\r\n                                                <div className=\"card mt-3\" style={{ width: \"18rem\" }}>\r\n                                                    <div className=\"card-body\">\r\n                                                        <h5 className=\"card-title\">{item.name}</h5>\r\n                                                        <p>Quantity: {item.qty}</p>\r\n                                                        <p>Size: {item.size}</p>\r\n                                                        <p>Price: ₹{item.price}/-</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}